'.source.js':
  'buildURL':
    'prefix': 'buildURL'
    'body': """
      buildURL(modelName, id, snapshot, requestType, query) {
        $1
      }
    """
  'createRecord':
    'prefix': 'createRecord'
    'body': """
      createRecord(store, type, snapshot) {
        $1
      }
    """
  'dataForRequest':
    'prefix': 'dataForRequest'
    'body': """
      dataForRequest(params) {
        $1
      }
    """
  'deleteRecord':
    'prefix': 'deleteRecord'
    'body': """
      deleteRecord(store, type, snapshot) {
        $1
      }
    """
  'findAll':
    'prefix': 'findAll'
    'body': """
      findAll(store, type, sinceToken, snapshotRecordArray) {
        $1
      }
    """
  'findBelongsTo':
    'prefix': 'findBelongsTo'
    'body': """
      findBelongsTo(store, snapshot, url) {
        $1
      }
    """
  'findHasMany':
    'prefix': 'findHasMany'
    'body': """
      findHasMany(store, snapshot, url) {
        $1
      }
    """
  'findMany':
    'prefix': 'findMany'
    'body': """
      findMany(store, type, ids, snapshots) {
        $1
      }
    """
  'findRecord':
    'prefix': 'findRecord'
    'body': """
      findRecord(store, type, id, snapshot) {
        $1
      }
    """
  'generateIdForRecord':
    'prefix': 'generateIdForRecord'
    'body': """
      generateIdForRecord(store, type, inputProperties) {
        $1
      }
    """
  'groupRecordsForFindMany':
    'prefix': 'groupRecordsForFindMany'
    'body': """
      groupRecordsForFindMany(store, snapshots) {
        $1
      }
    """
  'handleResponse':
    'prefix': 'handleResponse'
    'body': """
      handleResponse(status, headers, payload, requestData) {
        $1
      }
    """
  'headersForRequest':
    'prefix': 'headersForRequest'
    'body': """
      headersForRequest(params) {
        $1
      }
    """
  'isInvalid':
    'prefix': 'isInvalid'
    'body': """
      isInvalid(status, headers, payload) {
        $1
      }
    """
  'isSuccess':
    'prefix': 'isSuccess'
    'body': """
      isSuccess(status, headers, payload) {
        $1
      }
    """
  'methodForRequest':
    'prefix': 'methodForRequest'
    'body': """
      methodForRequest(params) {
        $1
      }
    """
  'pathForType':
    'prefix': 'pathForType'
    'body': """
      pathForType(modelName) {
        $1
      }
    """
  'query':
    'prefix': 'query'
    'body': """
      query(store, type, query) {
        $1
      }
    """
  'queryRecord':
    'prefix': 'queryRecord'
    'body': """
      queryRecord(store, type, query) {
        $1
      }
    """
  'serialize':
    'prefix': 'serialize'
    'body': """
      serialize(snapshot, options) {
        $1
      }
    """
  'shouldBackgroundReloadAll':
    'prefix': 'shouldBackgroundReloadAll'
    'body': """
      shouldBackgroundReloadAll(store, snapshotRecordArray) {
        $1
      }
    """
  'shouldBackgroundReloadRecord':
    'prefix': 'shouldBackgroundReloadRecord'
    'body': """
      shouldBackgroundReloadRecord(store, snapshot) {
        $1
      }
    """
  'shouldReloadAll':
    'prefix': 'shouldReloadAll'
    'body': """
      shouldReloadAll(store, snapshotRecordArray) {
        $1
      }
    """
  'shouldReloadRecord':
    'prefix': 'shouldReloadRecord'
    'body': """
      shouldReloadRecord(store, snapshot) {
        $1
      }
    """
  'sortQueryParams':
    'prefix': 'sortQueryParams'
    'body': """
      sortQueryParams(obj) {
        $1
      }
    """
  'updateRecord':
    'prefix': 'updateRecord'
    'body': """
      updateRecord(store, type, snapshot) {
        $1
      }
    """
  'urlForCreateRecord':
    'prefix': 'urlForCreateRecord'
    'body': """
      urlForCreateRecord(modelName, snapshot) {
        $1
      }
    """
  'urlForDeleteRecord':
    'prefix': 'urlForDeleteRecord'
    'body': """
      urlForDeleteRecord(id, modelName, snapshot) {
        $1
      }
    """
  'urlForFindAll':
    'prefix': 'urlForFindAll'
    'body': """
      urlForFindAll(modelName, snapshot) {
        $1
      }
    """
  'urlForFindBelongsTo':
    'prefix': 'urlForFindBelongsTo'
    'body': """
      urlForFindBelongsTo(id, modelName, snapshot) {
        $1
      }
    """
  'urlForFindHasMany':
    'prefix': 'urlForFindHasMany'
    'body': """
      urlForFindHasMany(id, modelName, snapshot) {
        $1
      }
    """
  'urlForFindMany':
    'prefix': 'urlForFindMany'
    'body': """
      urlForFindMany(ids, modelName, snapshots) {
        $1
      }
    """
  'urlForFindRecord':
    'prefix': 'urlForFindRecord'
    'body': """
      urlForFindRecord(id, modelName, snapshot) {
        $1
      }
    """
  'urlForQuery':
    'prefix': 'urlForQuery'
    'body': """
      urlForQuery(query, modelName) {
        $1
      }
    """
  'urlForQueryRecord':
    'prefix': 'urlForQueryRecord'
    'body': """
      urlForQueryRecord(query, modelName) {
        $1
      }
    """
  'urlForRequest':
    'prefix': 'urlForRequest'
    'body': """
      urlForRequest(params) {
        $1
      }
    """
  'urlForUpdateRecord':
    'prefix': 'urlForUpdateRecord'
    'body': """
      urlForUpdateRecord(id, modelName, snapshot) {
        $1
      }
    """
