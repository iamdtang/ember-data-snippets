'.source.js':
  'extractAttributes(modelClass, resourceHash)':
    'prefix': 'extractAttributes(modelClass, resourceHash)'
    'body': """
      extractAttributes(modelClass, resourceHash)resourceHash) {
        $1
      }
    """
  'extractErrors(store, typeClass, payload, id)':
    'prefix': 'extractErrors(store, typeClass, payload, id)'
    'body': """
      extractErrors(store, typeClass, payload, id)typeClass, payload, id) {
        $1
      }
    """
  'extractId(modelClass, resourceHash)':
    'prefix': 'extractId(modelClass, resourceHash)'
    'body': """
      extractId(modelClass, resourceHash)resourceHash) {
        $1
      }
    """
  'extractMeta(store, modelClass, payload)':
    'prefix': 'extractMeta(store, modelClass, payload)'
    'body': """
      extractMeta(store, modelClass, payload)modelClass, payload) {
        $1
      }
    """
  'extractPolymorphicRelationship(relationshipType, relationshipHash, relationshipOptions)':
    'prefix': 'extractPolymorphicRelationship(relationshipType, relationshipHash, relationshipOptions)'
    'body': """
      extractPolymorphicRelationship(relationshipType, relationshipHash, relationshipOptions)relationshipHash, relationshipOptions) {
        $1
      }
    """
  'extractRelationship(relationshipModelName, relationshipHash)':
    'prefix': 'extractRelationship(relationshipModelName, relationshipHash)'
    'body': """
      extractRelationship(relationshipModelName, relationshipHash)relationshipHash) {
        $1
      }
    """
  'extractRelationships(modelClass, resourceHash)':
    'prefix': 'extractRelationships(modelClass, resourceHash)'
    'body': """
      extractRelationships(modelClass, resourceHash)resourceHash) {
        $1
      }
    """
  'keyForAttribute(key, method)':
    'prefix': 'keyForAttribute(key, method)'
    'body': """
      keyForAttribute(key, method)method) {
        $1
      }
    """
  'keyForLink(key, kind)':
    'prefix': 'keyForLink(key, kind)'
    'body': """
      keyForLink(key, kind)kind) {
        $1
      }
    """
  'keyForPolymorphicType(key, typeClass, method)':
    'prefix': 'keyForPolymorphicType(key, typeClass, method)'
    'body': """
      keyForPolymorphicType(key, typeClass, method)typeClass, method) {
        $1
      }
    """
  'keyForRelationship(key, typeClass, method)':
    'prefix': 'keyForRelationship(key, typeClass, method)'
    'body': """
      keyForRelationship(key, typeClass, method)typeClass, method) {
        $1
      }
    """
  'modelNameFromPayloadKey(key)':
    'prefix': 'modelNameFromPayloadKey(key)'
    'body': """
      modelNameFromPayloadKey(key)modelNameFromPayloadKey(key) {
        $1
      }
    """
  'normalize(modelClass, resourceHash, prop)':
    'prefix': 'normalize(modelClass, resourceHash, prop)'
    'body': """
      normalize(modelClass, resourceHash, prop)resourceHash, prop) {
        $1
      }
    """
  'normalizeArrayResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeArrayResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeArrayResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeCreateRecordResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeCreateRecordResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeCreateRecordResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeDeleteRecordResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeDeleteRecordResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeDeleteRecordResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindAllResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeFindAllResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeFindAllResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindBelongsToResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeFindBelongsToResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeFindBelongsToResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindHasManyResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeFindHasManyResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeFindHasManyResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindManyResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeFindManyResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeFindManyResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindRecordResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeFindRecordResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeFindRecordResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeQueryRecordResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeQueryRecordResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeQueryRecordResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeQueryResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeQueryResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeQueryResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeSaveResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeSaveResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeSaveResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeSingleResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeSingleResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeSingleResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeUpdateRecordResponse(store, primaryModelClass, payload, id, requestType)':
    'prefix': 'normalizeUpdateRecordResponse(store, primaryModelClass, payload, id, requestType)'
    'body': """
      normalizeUpdateRecordResponse(store, primaryModelClass, payload, id, requestType)primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'payloadKeyFromModelName(modelName)':
    'prefix': 'payloadKeyFromModelName(modelName)'
    'body': """
      payloadKeyFromModelName(modelName)payloadKeyFromModelName(modelName) {
        $1
      }
    """
  'pushPayload(store, payload)':
    'prefix': 'pushPayload(store, payload)'
    'body': """
      pushPayload(store, payload)payload) {
        $1
      }
    """
  'serialize(snapshot, options)':
    'prefix': 'serialize(snapshot, options)'
    'body': """
      serialize(snapshot, options)options) {
        $1
      }
    """
  'serializeAttribute(snapshot, json, key, attribute)':
    'prefix': 'serializeAttribute(snapshot, json, key, attribute)'
    'body': """
      serializeAttribute(snapshot, json, key, attribute)json, key, attribute) {
        $1
      }
    """
  'serializeBelongsTo(snapshot, json, relationship)':
    'prefix': 'serializeBelongsTo(snapshot, json, relationship)'
    'body': """
      serializeBelongsTo(snapshot, json, relationship)json, relationship) {
        $1
      }
    """
  'serializeHasMany(snapshot, json, relationship)':
    'prefix': 'serializeHasMany(snapshot, json, relationship)'
    'body': """
      serializeHasMany(snapshot, json, relationship)json, relationship) {
        $1
      }
    """
  'serializeIntoHash(hash, typeClass, snapshot, options)':
    'prefix': 'serializeIntoHash(hash, typeClass, snapshot, options)'
    'body': """
      serializeIntoHash(hash, typeClass, snapshot, options)typeClass, snapshot, options) {
        $1
      }
    """
  'serializePolymorphicType(snapshot, json, relationship)':
    'prefix': 'serializePolymorphicType(snapshot, json, relationship)'
    'body': """
      serializePolymorphicType(snapshot, json, relationship)json, relationship) {
        $1
      }
    """
