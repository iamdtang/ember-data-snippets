'serializers/.source.js':
  'extractAttributes':
    'prefix': 'extractAttributes'
    'body': """
      extractAttributes(modelClass, resourceHash) {
        $1
      }
    """
  'extractErrors':
    'prefix': 'extractErrors'
    'body': """
      extractErrors(store, typeClass, payload, id) {
        $1
      }
    """
  'extractId':
    'prefix': 'extractId'
    'body': """
      extractId(modelClass, resourceHash) {
        $1
      }
    """
  'extractMeta':
    'prefix': 'extractMeta'
    'body': """
      extractMeta(store, modelClass, payload) {
        $1
      }
    """
  'extractPolymorphicRelationship':
    'prefix': 'extractPolymorphicRelationship'
    'body': """
      extractPolymorphicRelationship(relationshipType, relationshipHash, relationshipOptions) {
        $1
      }
    """
  'extractRelationship':
    'prefix': 'extractRelationship'
    'body': """
      extractRelationship(relationshipModelName, relationshipHash) {
        $1
      }
    """
  'extractRelationships':
    'prefix': 'extractRelationships'
    'body': """
      extractRelationships(modelClass, resourceHash) {
        $1
      }
    """
  'keyForAttribute':
    'prefix': 'keyForAttribute'
    'body': """
      keyForAttribute(key, method) {
        $1
      }
    """
  'keyForLink':
    'prefix': 'keyForLink'
    'body': """
      keyForLink(key, kind) {
        $1
      }
    """
  'keyForPolymorphicType':
    'prefix': 'keyForPolymorphicType'
    'body': """
      keyForPolymorphicType(key, typeClass, method) {
        $1
      }
    """
  'keyForRelationship':
    'prefix': 'keyForRelationship'
    'body': """
      keyForRelationship(key, typeClass, method) {
        $1
      }
    """
  'modelNameFromPayloadKey':
    'prefix': 'modelNameFromPayloadKey'
    'body': """
      modelNameFromPayloadKey(key) {
        $1
      }
    """
  'normalize':
    'prefix': 'normalize'
    'body': """
      normalize(modelClass, resourceHash, prop) {
        $1
      }
    """
  'normalizeArrayResponse':
    'prefix': 'normalizeArrayResponse'
    'body': """
      normalizeArrayResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeCreateRecordResponse':
    'prefix': 'normalizeCreateRecordResponse'
    'body': """
      normalizeCreateRecordResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeDeleteRecordResponse':
    'prefix': 'normalizeDeleteRecordResponse'
    'body': """
      normalizeDeleteRecordResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindAllResponse':
    'prefix': 'normalizeFindAllResponse'
    'body': """
      normalizeFindAllResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindBelongsToResponse':
    'prefix': 'normalizeFindBelongsToResponse'
    'body': """
      normalizeFindBelongsToResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindHasManyResponse':
    'prefix': 'normalizeFindHasManyResponse'
    'body': """
      normalizeFindHasManyResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindManyResponse':
    'prefix': 'normalizeFindManyResponse'
    'body': """
      normalizeFindManyResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeFindRecordResponse':
    'prefix': 'normalizeFindRecordResponse'
    'body': """
      normalizeFindRecordResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeQueryRecordResponse':
    'prefix': 'normalizeQueryRecordResponse'
    'body': """
      normalizeQueryRecordResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeQueryResponse':
    'prefix': 'normalizeQueryResponse'
    'body': """
      normalizeQueryResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeResponse':
    'prefix': 'normalizeResponse'
    'body': """
      normalizeResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeSaveResponse':
    'prefix': 'normalizeSaveResponse'
    'body': """
      normalizeSaveResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeSingleResponse':
    'prefix': 'normalizeSingleResponse'
    'body': """
      normalizeSingleResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'normalizeUpdateRecordResponse':
    'prefix': 'normalizeUpdateRecordResponse'
    'body': """
      normalizeUpdateRecordResponse(store, primaryModelClass, payload, id, requestType) {
        $1
      }
    """
  'payloadKeyFromModelName':
    'prefix': 'payloadKeyFromModelName'
    'body': """
      payloadKeyFromModelName(modelName) {
        $1
      }
    """
  'pushPayload':
    'prefix': 'pushPayload'
    'body': """
      pushPayload(store, payload) {
        $1
      }
    """
  'serialize':
    'prefix': 'serialize'
    'body': """
      serialize(snapshot, options) {
        $1
      }
    """
  'serializeAttribute':
    'prefix': 'serializeAttribute'
    'body': """
      serializeAttribute(snapshot, json, key, attribute) {
        $1
      }
    """
  'serializeBelongsTo':
    'prefix': 'serializeBelongsTo'
    'body': """
      serializeBelongsTo(snapshot, json, relationship) {
        $1
      }
    """
  'serializeHasMany':
    'prefix': 'serializeHasMany'
    'body': """
      serializeHasMany(snapshot, json, relationship) {
        $1
      }
    """
  'serializeIntoHash':
    'prefix': 'serializeIntoHash'
    'body': """
      serializeIntoHash(hash, typeClass, snapshot, options) {
        $1
      }
    """
  'serializePolymorphicType':
    'prefix': 'serializePolymorphicType'
    'body': """
      serializePolymorphicType(snapshot, json, relationship) {
        $1
      }
    """
